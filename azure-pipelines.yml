trigger: none  # Disable automatic triggering on code pushes

pool:
  vmImage: 'ubuntu-latest'

parameters:
- name: SUITE_FILE
  displayName: 'Select the suite file to run'
  type: string
  default: 'Sanity_ApplicationModule.xml'
  values:
    - 'MasterSuite_Regression_Application_SingleLogin.xml'
    - 'MasterSuite_Sanity_GuaranteedIssue_MulLogins.xml'
    - 'MasterSuite_Sanity_GuaranteedIssue_QuadRun.xml'
    - 'MasterSuite_Sanity_GuaranteedIssue_SingleLogin.xml'
    - 'MasterSuite_Sanity_MulLogins.xml'
    - 'MasterSuite_Sanity_QuadRun.xml'
    - 'MasterSuite_Sanity_SingleLogin.xml'
    - 'Regression_AccountBalanceHistory.xml'
    - 'Regression_AccountBalanceReport.xml'
    - 'Regression_ActivityReports.xml'
    - 'Regression_AllModules.xml'
    - 'Regression_ApplicationModule.xml'
    - 'Regression_ApplicationPaymentStatusReport.xml'
    - 'Regression_CheckReport.xml'
    - 'Regression_CheckReportHistory.xml'
    - 'Regression_GuaranteedIssue.xml'
    - 'Regression_OtherModules.xml'
    - 'Regression_PaymentRefusedReport.xml'
    - 'Regression_RenewalPremiumReports.xml'
    - 'Regression_ReportModules.xml'
    - 'Regression_StandardToGuaranteed.xml'
    - 'Regression_StatusReport.xml'
    - 'Sanity_ApplicationModule.xml'
    - 'Sanity_GuaranteedIssue.xml'
    - 'Sanity_StandardToGuaranteed.xml'
    - 'Regression_DashboardModule.xml'
    - 'Regression_CustomerModule.xml'
    - 'Regression_PolicyPayment.xml'
    - 'Regression_ProfileModule.xml'

stages:
- stage: CleanWorkspace
  displayName: 'Clean Workspace'
  jobs:
  - job: Clean
    displayName: 'Clean Workspace Directory'
    steps:
      - script: |
          echo "Cleaning workspace..."
          rm -rf $(Build.SourcesDirectory)/*
        displayName: 'Clean Workspace'

- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: MavenBuild
    displayName: 'Maven Build and Test'
    steps:
      - checkout: self
        displayName: 'Git Checkout'

      # Sanitize the branch name by replacing slashes with hyphens
      - script: |
          echo "Sanitizing branch name for cache key..."
          BRANCH_NAME=$(Build.SourceBranchName | tr '/' '-')
          echo "##vso[task.setvariable variable=CACHE_BRANCH_NAME]$BRANCH_NAME"
        displayName: 'Sanitize Branch Name for Cache Key'

      # Cache Maven dependencies based on sanitized branch name
      - task: Cache@2
        inputs:
          key: 'maven-cache-$(Agent.OS)-$(CACHE_BRANCH_NAME)-$(MD5(pom.xml))'
          restoreKeys: |
            maven-cache-$(Agent.OS)-$(CACHE_BRANCH_NAME)
            maven-cache-$(Agent.OS)
          path: $(MAVEN_CACHE_DIRECTORY)
        displayName: 'Cache Maven Dependencies'

      # Ensure MAVEN_CACHE_DIRECTORY exists
      - script: |
          echo "Setting up Maven cache directory"
          mkdir -p ~/.m2/repository
          echo "MAVEN_CACHE_DIRECTORY=~/.m2/repository" >> $(Build.Bash)
        displayName: 'Set Maven Cache Directory'

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'
        displayName: 'Install Java 17'

      - task: MavenAuthenticate@0
        inputs:
          mavenAuthenticate: true
        displayName: 'Maven Authentication'

      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          goals: 'clean test'
          options: '-DsuiteXmlFile=src/test/resources/suites/citizens/${{ parameters.SUITE_FILE }}'
          publishJUnitResults: true
          testResultsFiles: '**/target/surefire-reports/*.xml'
        displayName: 'Maven Build and Run Tests'

      - script: |
          echo "Publishing TestNG results..."
        displayName: 'Publish TestNG Results'
