trigger:
- main  # Trigger the pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use the latest Ubuntu image

parameters:
  - name: SUITE_FILE
    type: string
    default: 'MasterSuite_Regression_Application_SingleLogin.xml'  # Default suite file
    values:
      - MasterSuite_Regression_Application_SingleLogin.xml
      - MasterSuite_Sanity_GuaranteedIssue_MulLogins.xml
      - MasterSuite_Sanity_GuaranteedIssue_QuadRun.xml
      - MasterSuite_Sanity_GuaranteedIssue_SingleLogin.xml
      - MasterSuite_Sanity_MulLogins.xml
      - MasterSuite_Sanity_QuadRun.xml
      - MasterSuite_Sanity_SingleLogin.xml
      - Regression_AccountBalanceHistory.xml
      - Regression_AccountBalanceReport.xml
      - Regression_ActivityReports.xml
      - Regression_AllModules.xml
      - Regression_ApplicationModule.xml
      - Regression_ApplicationPaymentStatusReport.xml
      - Regression_CheckReport.xml
      - Regression_CheckReportHistory.xml
      - Regression_GuaranteedIssue.xml
      - Regression_OtherModules.xml
      - Regression_PaymentRefusedReport.xml
      - Regression_RenewalPremiumReports.xml
      - Regression_ReportModules.xml
      - Regression_StandardToGuaranteed.xml
      - Regression_StatusReport.xml
      - Sanity_ApplicationModule.xml
      - Sanity_GuaranteedIssue.xml
      - Sanity_StandardToGuaranteed.xml

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
    - job: MavenBuild
      displayName: 'Maven Build and Test'
      steps:
        - checkout: self  # Check out the source code from the repository

        - task: JavaToolInstaller@0  # Install Java
          inputs:
            versionSpec: '17'  # Specify Java version
            jdkArchitectureOption: 'x64'  # Choose the architecture (x64 is common)
            jdkSourceOption: 'PreInstalled'  # Choose PreInstalled or Install from a source

        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'  # Path to your pom.xml
            goals: 'clean install'  # Maven goals to execute
            options: '-DskipTests=false'  # Specify any options
            publishJUnitResults: true  # Publish test results to Azure DevOps
            testResultsFiles: '**/target/surefire-reports/*.xml'  # Path to the test results

        - script: |
            echo "Selected Suite File: ${SUITE_FILE}"
            # Verify the suite file exists
            if [ -f "src/test/resources/suites/citizens/${SUITE_FILE}" ]; then
                echo "Running the tests with suite file: ${SUITE_FILE}"
                mvn test -DsuiteXmlFile=src/test/resources/suites/citizens/${SUITE_FILE}
            else
                echo "Suite file does not exist: src/test/resources/suites/citizens/${SUITE_FILE}"
                exit 1
            fi
          displayName: 'Run Tests'
